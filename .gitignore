.DS_STORE

.vscode
.vstags

.venv/

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]

# Distribution / packaging
bin/
build/
develop-eggs/
dist/
eggs/
lib64/
parts/
sdist/
var/
*.egg-info/
.installed.cfg
*.egg
venv/
# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
.tox/
.coverage
.cache
nosetests.xml
coverage.xml

# Sphinx documentation
docs/_build/

kivy.log
etc/*.json
etc/kivy/*
etc/kivy/config.ini

local/


rust/debug/
# These are backup files generated by rustfmt
**/*.rs.bk
rust/target/
rust/target/.rustc_info.json
build/
dist/
libdigitaldash_rust.egg-info/
libdigitaldash/target/


etc/config.json

themes/themes.json
# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# Diagnostic reports (https://nodejs.org/api/report.html)
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# Snowpack dependency directory (https://snowpack.dev/)
web_modules/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env
.env.test

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next
out

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
# Comment in the public line in if your project uses Gatsby and not Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# public

# vuepress build output
.vuepress/dist

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# yarn v2

.yarn/cache
.yarn/unplugged
.yarn/build-state.yml
.pnp.*

.idea
.DS_Store
.nyc_output
.vscode
node_modules
*.map
/src/compiler/compile/internal_exports.ts
/compiler.d.ts
/compiler.*js
/index.*js
/internal
/store
/easing
/motion
/transition
/animate
/scratch/
/coverage/
/coverage.lcov
/test/*/samples/_
/yarn-error.log
_actual*.*
_output
/types

/site/cypress/screenshots/
/site/__sapper__/
/site/.env
/site/.sessions
/site/static/svelte-app.json
/site/static/contributors.jpg
/site/static/workers
/site/static/organisations
/site/scripts/svelte-app
/site/scripts/community
/site/src/routes/_contributors.js
/site/src/routes/_components/WhosUsingSvelte.svelte
.DS_Store
node_modules
/.svelte
/build
/functions
/.svelte-kit
/build
/kivy_venv

frontend/.svelte-kit/

/frontend/ke.db
kivy-deps-build/build_linux_dependencies.sh
kivy-deps-build/kivy-dependencies/download/libpng-1.6.40.tar.gz
kivy-deps-build/kivy-dependencies/download/SDL2_image-2.6.3.tar.gz
kivy-deps-build/kivy-dependencies/download/SDL2_mixer-2.6.3.tar.gz
kivy-deps-build/kivy-dependencies/download/SDL2_ttf-2.20.2.tar.gz
kivy-deps-build/kivy-dependencies/download/SDL2-2.26.4.tar.gz
libdigitaldash/libdigitaldash/libdigitaldash.cpython-310-x86_64-linux-gnu.so
libdigitaldash/libdigitaldash/libdigitaldash.cpython-311-x86_64-linux-gnu.so
build_linux_dependencies.sh
/kivy_venv
/kivy-deps-build/
/digitaldash/kivy-deps-build/
